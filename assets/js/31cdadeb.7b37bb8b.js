"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[191],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>b});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),u=r,b=p["".concat(s,".").concat(u)]||p[u]||f[u]||i;return n?a.createElement(b,o(o({ref:t},d),{},{components:n})):a.createElement(b,o({ref:t},d))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4712:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={title:"prettyToString Annotation",custom_edit_url:"https://github.com/bitlap/rolls/edit/master/docs/prettyToString_annotation.md"},o=void 0,l={unversionedId:"prettyToString_annotation",id:"prettyToString_annotation",title:"prettyToString Annotation",description:"Installation using SBT (Recommended)",source:"@site/../rolls-docs/target/mdoc/prettyToString_annotation.md",sourceDirName:".",slug:"/prettyToString_annotation",permalink:"/rolls/docs/prettyToString_annotation",draft:!1,editUrl:"https://github.com/bitlap/rolls/edit/master/docs/prettyToString_annotation.md",tags:[],version:"current",frontMatter:{title:"prettyToString Annotation",custom_edit_url:"https://github.com/bitlap/rolls/edit/master/docs/prettyToString_annotation.md"},sidebar:"tutorialSidebar",previous:{title:"classSchema Annotation",permalink:"/rolls/docs/classSchema_annotation"},next:{title:"CSV",permalink:"/rolls/docs/csv"}},s={},c=[{value:"Installation using SBT (Recommended)",id:"installation-using-sbt-recommended",level:2},{value:"Use <code>@prettyToString</code> on classes",id:"use-prettytostring-on-classes",level:2},{value:"Use <code>@stringMask</code> on fields",id:"use-stringmask-on-fields",level:2}],d={toc:c},p="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"installation-using-sbt-recommended"},"Installation using SBT (Recommended)"),(0,r.kt)("p",null,"If you are building with sbt, add the following to your ",(0,r.kt)("inlineCode",{parentName:"p"},"build.sbt"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'autoCompilerPlugins := true\naddCompilerPlugin("org.bitlap" %% "rolls-compiler-plugin" % "<version>")\nlibraryDependencies ++= Seq(\n  "org.bitlap" %% "rolls-core" % "<version>"\n)\n')),(0,r.kt)("h2",{id:"use-prettytostring-on-classes"},"Use ",(0,r.kt)("inlineCode",{parentName:"h2"},"@prettyToString")," on classes"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"@prettyToString")," can be added on classes or case classes. It will ignore private fields."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If ",(0,r.kt)("inlineCode",{parentName:"li"},"standard")," is ",(0,r.kt)("inlineCode",{parentName:"li"},"true"),", call ",(0,r.kt)("inlineCode",{parentName:"li"},"toString")," yields ",(0,r.kt)("inlineCode",{parentName:"li"},"Test(field1=value1,field2=value2)"),"."),(0,r.kt)("li",{parentName:"ul"},"Otherwise, call ",(0,r.kt)("inlineCode",{parentName:"li"},"toString")," yields ",(0,r.kt)("inlineCode",{parentName:"li"},'{"field1":"value1","field2":"value2"}'),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"import bitlap.rolls.core.annotations.*\n\n@prettyToString(standard = false)\nfinal case class TestCaseClassJsonNamedArg(\n  id: String,\n  tenantId: Map[String, String],\n  private val resourceActions: List[String],\n  deleted: Long,\n  subPermissions: List[String]\n)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Call the ",(0,r.kt)("inlineCode",{parentName:"strong"},"toString"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{"tenantId":{"7f6e55cf-18e8-498c-8444-c128ca6cc71a":"7f6e55cf-18e8-498c-8444-c128ca6cc71a","b86a1c62-b15b-4827-a617-770a2d975dbc":"b86a1c62-b15b-4827-a617-770a2d975dbc","0eb0d095-dfaf-431b-a57f-e49af575e2ce":"0eb0d095-dfaf-431b-a57f-e49af575e2ce","b5bf7e61-b8a2-479a-83fa-52b7d5a220bb":"b5bf7e61-b8a2-479a-83fa-52b7d5a220bb","79642570-62a0-4639-93b2-9a86bb13027f":"79642570-62a0-4639-93b2-9a86bb13027f"},"resourceActions":["f2d41db2-862c-45b4-bfe2-df85f85f2de3","23b8f097-0930-42e6-8951-84ac4103829f","70ca2742-05a1-4028-8ccc-3be553e867c3","fa52af1a-cafc-4bf3-9e28-425f5b8a9d9f","0d6bc9f4-42fc-4999-8d40-3d1f87fc2a58"],"deleted":-925601941732221555,"subPermissions":["d0b5f85e-3a0a-4708-998c-9bfcb0711220","112760b2-668d-4b3e-9ec6-3f742b77ece9","1cb1e312-137c-4ad2-a443-bb1dce8695ac","54678377-b840-4de9-9058-a5413097c813","9f37a1ca-06ad-4f8f-b7af-73b1c3594ee3"],"id":"63f796e3-da90-4adf-8537-486d5032d8b4"}\n')),(0,r.kt)("h2",{id:"use-stringmask-on-fields"},"Use ",(0,r.kt)("inlineCode",{parentName:"h2"},"@stringMask")," on fields"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"@stringMask")," can be added on the fields of class or case class, the field will output as ",(0,r.kt)("inlineCode",{parentName:"p"},"***"),"."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"@stringMask")," can be added on the field type or on the field name."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"import bitlap.rolls.core.annotations.*\n\n@prettyToString\nfinal case class TestCaseClassJson(\n  id: String,\n  tenantId: Map[String, String] @stringMask,\n  private val resourceActions: List[String],\n  @stringMask deleted: Long,\n  @stringMask subPermissions: List[String]\n)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Call the ",(0,r.kt)("inlineCode",{parentName:"strong"},"toString"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{"tenantId":"***","resourceActions":["63e67982-7cc3-49d1-bd7c-71f88f9cdd6f","1e0d3459-3ae7-4488-8f56-1f0a94128de8","2df5a658-3a85-4737-9f84-1ddcb08f7c34","b22fceaa-73ee-47b2-bf4e-7eb2908c7cf4","676d1c4d-6fd5-446c-b02e-7dae59d374b3"],"deleted":"***","subPermissions":"***","id":"f7f937c0-32de-4380-acca-9b4760d18cde"}\n')))}f.isMDXComponent=!0}}]);