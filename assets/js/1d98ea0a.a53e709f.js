"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[630],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,b=u["".concat(i,".").concat(d)]||u[d]||m[d]||o;return n?a.createElement(b,l(l({ref:t},p),{},{components:n})):a.createElement(b,l({ref:t},p))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:r,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4078:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={title:"classSchema Annotation",custom_edit_url:"https://github.com/bitlap/rolls/edit/master/docs/classSchema_annotation.md"},l=void 0,s={unversionedId:"classSchema_annotation",id:"classSchema_annotation",title:"classSchema Annotation",description:"Installation using SBT (Recommended)",source:"@site/../rolls-docs/target/mdoc/classSchema_annotation.md",sourceDirName:".",slug:"/classSchema_annotation",permalink:"/rolls/docs/classSchema_annotation",draft:!1,editUrl:"https://github.com/bitlap/rolls/edit/master/docs/classSchema_annotation.md",tags:[],version:"current",frontMatter:{title:"classSchema Annotation",custom_edit_url:"https://github.com/bitlap/rolls/edit/master/docs/classSchema_annotation.md"},sidebar:"tutorialSidebar",previous:{title:"Quick Start",permalink:"/rolls/docs/quickstart"},next:{title:"prettyToString Annotation",permalink:"/rolls/docs/prettyToString_annotation"}},i={},c=[{value:"Installation using SBT (Recommended)",id:"installation-using-sbt-recommended",level:2},{value:"Use <code>@classSchema</code> on classes",id:"use-classschema-on-classes",level:2},{value:"Get Data",id:"get-data",level:2}],p={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"installation-using-sbt-recommended"},"Installation using SBT (Recommended)"),(0,r.kt)("p",null,"If you are building with sbt, add the following to your ",(0,r.kt)("inlineCode",{parentName:"p"},"build.sbt"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'autoCompilerPlugins := true\naddCompilerPlugin("org.bitlap" %% "rolls-compiler-plugin" % "<version>")\nlibraryDependencies ++= Seq(\n  "org.bitlap" %% "rolls-core" % "<version>"\n)\n')),(0,r.kt)("h2",{id:"use-classschema-on-classes"},"Use ",(0,r.kt)("inlineCode",{parentName:"h2"},"@classSchema")," on classes"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"@classSchema")," can be added on classes or case classes. It only resolves schemas for public concrete methods and ",(0,r.kt)("strong",{parentName:"p"},"excludes")," the methods of ",(0,r.kt)("inlineCode",{parentName:"p"},"Product")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Any"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"import bitlap.rolls.core.annotations.classSchema\n\n@classSchema\nfinal case class SimpleClassTest() {\n  def testMethod(\n    listField: List[SubSubSubAuthPermissionPO],\n    stringField: String,\n    longOptField: Option[SubSubSubAuthPermissionPO],\n    nestedObjectField: SubSubSubAuthPermissionPO,\n    eitherField: Either[String, SubSubSubAuthPermissionPO]\n  ): SubSubSubAuthPermissionPO = ???\n}\n\nfinal case class SubSubSubAuthPermissionPO(list: List[String])\n")),(0,r.kt)("h2",{id:"get-data"},"Get Data"),(0,r.kt)("p",null,"By default, binary files (use java serialization) will be stored in ",(0,r.kt)("inlineCode",{parentName:"p"},"/tmp/.compiler/classSchema_%s.txt"),", which can be configured by ",(0,r.kt)("inlineCode",{parentName:"p"},"config.properties"),"."),(0,r.kt)("p",null,"If you need to obtain data through HTTP, add the following to your ",(0,r.kt)("inlineCode",{parentName:"p"},"build.sbt"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'lazy val reader = scala.io.Source.fromFile("config.properties")\nlazy val config = {\n  val ret = reader.getLines().toList.map(p => s"-P:RollsCompilerPlugin:$p")\n  reader.close()\n  ret\n}\n\nscalacOptions ++= config\nlibraryDependencies ++= Seq(\n  "org.bitlap" %% "rolls-compiler-plugin" % "<version>"\n)\n')),(0,r.kt)("p",null,"Then add the following properties to ",(0,r.kt)("strong",{parentName:"p"},"config.properties"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-properties"},"classSchemaPostUri=http://localhost:18000/rolls-doc\n")),(0,r.kt)("p",null,"The data will be written to the uri service as a post request through the ",(0,r.kt)("inlineCode",{parentName:"p"},"ObjectOutputStream"),", We read a case class object through the tool method:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val inputStream: InputStream = ???\nval schema: ClassSchema = Utils.readObject(inputStream)\n")))}m.isMDXComponent=!0}}]);